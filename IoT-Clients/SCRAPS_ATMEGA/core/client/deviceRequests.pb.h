/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_DEVICEREQUESTS_PB_H_INCLUDED
#define PB_DEVICEREQUESTS_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _checkRequests { 
    pb_callback_t DeviceIdentity; 
} checkRequests;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define checkRequests_init_default               {{{NULL}, NULL}}
#define checkRequests_init_zero                  {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define checkRequests_DeviceIdentity_tag         1

/* Struct field encoding specification for nanopb */
#define checkRequests_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   DeviceIdentity,    1)
#define checkRequests_CALLBACK pb_default_field_callback
#define checkRequests_DEFAULT NULL

extern const pb_msgdesc_t checkRequests_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define checkRequests_fields &checkRequests_msg

/* Maximum encoded size of messages (where known) */
/* checkRequests_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
